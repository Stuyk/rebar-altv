import glob from 'fast-glob';
import path from 'path';
import fs from 'fs';
import { getEnabledPlugins, sanitizePath } from './shared.js';
import { writeFile } from './fileHelpers.js';

function start() {
    const plugins = getEnabledPlugins();
    const vueFiles = {};

    for (const pluginName of plugins) {
        const pluginPath = path.join(process.cwd(), 'src/plugins', pluginName);
        if (pluginPath.includes('.gitkeep')) {
            continue;
        }

        if (fs.statSync(pluginPath).isDirectory() && pluginName.startsWith('[') && pluginName.endsWith(']')) {
            const categoryPlugins = fs.readdirSync(pluginPath);
            for (const categoryPlugin of categoryPlugins) {
                const categoryPluginPath = path.join(pluginPath, categoryPlugin);
                if (fs.statSync(categoryPluginPath).isDirectory()) {
                    processPlugin(categoryPluginPath, `${pluginName}/${categoryPlugin}`, vueFiles);
                }
            }
        } else {
            processPlugin(pluginPath, pluginName, vueFiles);
        }
    }

    const importsHeader = `// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY CONTENTS\n\n`;
    let content = '//@ts-nocheck\n' + importsHeader;

    const sortedComponentNames = Object.keys(vueFiles).sort((a, b) => a.localeCompare(b));

    content += sortedComponentNames
        .map((componentName) => {
            return `import ${componentName} from '${vueFiles[componentName]}';`;
        })
        .join('\n');

    content +=
        '\n\nexport const PLUGIN_IMPORTS = {\n' +
        sortedComponentNames
            .map((componentName) => {
                return `    ${componentName}: ${componentName},`;
            })
            .join('\n') +
        '\n};\n';

    const importPath = sanitizePath(path.join(process.cwd(), 'webview/pages/plugins.ts'));
    writeFile(importPath, content);

    return sortedComponentNames.length;
}

function processPlugin(pluginPath, pluginName, vueFiles) {
    const files = glob.sync(sanitizePath(path.join(pluginPath, 'webview/*.vue')));

    for (const file of files) {
        const componentName = path.basename(file, '.vue');
        vueFiles[componentName] = sanitizePath(`../../src/plugins/${pluginName}/webview/${componentName}.vue`);
    }
}

start();
